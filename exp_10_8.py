# -*- coding: utf-8 -*-
"""EXP_10_8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nmNwRZeOImRgoASE_YGccz3eNluKLHEG
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
# Load the noisy image
noisy_image = cv2.imread('/content/smoothening data (1).png', 0)  # Load as grayscale # Corrected: Use 0 for grayscale

# Check if the image was loaded successfully
if noisy_image is None:
    print("Error: Could not load image.")
else:
    # Apply a median filter to remove noise
    filtered_image = cv2.medianBlur(noisy_image, 7)  # Corrected: Kernel size should be an odd integer

    # Display the original noisy image and the filtered image
    cv2_imshow(noisy_image)
    cv2_imshow(filtered_image)

    # Wait for a key press and then close the windows
    cv2.waitKey(0)
    cv2.destroyAllWindows()

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
# Load the noisy image
noisy_image = cv2.imread('/content/smoothening data2 (1).png', 0)  # Load as grayscale # Corrected: Use 0 for grayscale

# Check if the image was loaded successfully
if noisy_image is None:
    print("Error: Could not load image.")
else:
    # Apply a median filter to remove noise
    filtered_image = cv2.medianBlur(noisy_image, 21)  # Corrected: Kernel size should be an odd integer

    # Display the original noisy image and the filtered image
    cv2_imshow(noisy_image)
    cv2_imshow(filtered_image)

    # Wait for a key press and then close the windows
    cv2.waitKey(0)
    cv2.destroyAllWindows()

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
# Load the noisy image
noisy_image = cv2.imread('/content/smoothening data3 (1).png', 0)  # Load as grayscale # Corrected: Use 0 for grayscale

# Check if the image was loaded successfully
if noisy_image is None:
    print("Error: Could not load image.")
else:
    # Apply a median filter to remove noise
    filtered_image = cv2.medianBlur(noisy_image, 31)  # Corrected: Kernel size should be an odd integer

    # Display the original noisy image and the filtered image
    cv2_imshow(noisy_image)
    cv2_imshow(filtered_image)

    # Wait for a key press and then close the windows
    cv2.waitKey(0)
    cv2.destroyAllWindows()

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
# Load the noisy image
noisy_image = cv2.imread('/content/smoothening data4 (1).png', 0)  # Load as grayscale # Corrected: Use 0 for grayscale

# Check if the image was loaded successfully
if noisy_image is None:
    print("Error: Could not load image.")
else:
    # Apply a median filter to remove noise
    filtered_image = cv2.medianBlur(noisy_image, 9)  # Corrected: Kernel size should be an odd integer

    # Display the original noisy image and the filtered image
    cv2_imshow(noisy_image)
    cv2_imshow(filtered_image)

    # Wait for a key press and then close the windows
    cv2.waitKey(0)
    cv2.destroyAllWindows()

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
# Load the noisy image
noisy_image = cv2.imread('/content/smoothening data5 (1).png', 0)  # Load as grayscale # Corrected: Use 0 for grayscale

# Check if the image was loaded successfully
if noisy_image is None:
    print("Error: Could not load image.")
else:
    # Apply a median filter to remove noise
    filtered_image = cv2.medianBlur(noisy_image, 31)  # Corrected: Kernel size should be an odd integer

    # Display the original noisy image and the filtered image
    cv2_imshow(noisy_image)
    cv2_imshow(filtered_image)

    # Wait for a key press and then close the windows
    cv2.waitKey(0)
    cv2.destroyAllWindows()